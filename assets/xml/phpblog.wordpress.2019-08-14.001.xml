<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress.com" created="2019-08-14 09:15"-->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>PHP blog</title>
	<link>https://phpknowledgeblog47.wordpress.com</link>
	<description>PHP knowledge blog</description>
	<pubDate>Wed, 14 Aug 2019 09:15:49 +0000</pubDate>
	<language></language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
	<wp:base_blog_url>https://phpknowledgeblog47.wordpress.com</wp:base_blog_url>

	<wp:author><wp:author_id>155821269</wp:author_id><wp:author_login><![CDATA[rohanjd]]></wp:author_login><wp:author_email><![CDATA[rohan.jd@hotmail.com]]></wp:author_email><wp:author_display_name><![CDATA[rohanjd]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
	<wp:tag><wp:term_id>182564</wp:term_id><wp:tag_slug>containers</wp:tag_slug><wp:tag_name><![CDATA[Containers]]></wp:tag_name>
</wp:tag>
	<wp:tag><wp:term_id>4504191</wp:term_id><wp:tag_slug>docker</wp:tag_slug><wp:tag_name><![CDATA[Docker]]></wp:tag_name>
</wp:tag>
	<wp:tag><wp:term_id>308799219</wp:term_id><wp:tag_slug>docker-compose</wp:tag_slug><wp:tag_name><![CDATA[docker-compose]]></wp:tag_name>
</wp:tag>
	<wp:tag><wp:term_id>36169</wp:term_id><wp:tag_slug>lamp</wp:tag_slug><wp:tag_name><![CDATA[LAMP]]></wp:tag_name>
</wp:tag>
	<wp:tag><wp:term_id>458</wp:term_id><wp:tag_slug>php</wp:tag_slug><wp:tag_name><![CDATA[PHP]]></wp:tag_name>
</wp:tag>
	<wp:tag><wp:term_id>298309</wp:term_id><wp:tag_slug>xampp</wp:tag_slug><wp:tag_name><![CDATA[xampp]]></wp:tag_name>
</wp:tag>
	<wp:term><wp:term_id>1357</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[primary]]></wp:term_slug><wp:term_name><![CDATA[Primary]]></wp:term_name>
</wp:term>

	<generator>http://wordpress.com/</generator>
<image>
		<url>http://s0.wp.com/i/buttonw-com.png</url>
		<title>PHP blog</title>
		<link>https://phpknowledgeblog47.wordpress.com</link>
	</image>
		
	<item>
		<title>The Journey Begins</title>
		<link>https://phpknowledgeblog47.wordpress.com/2019/04/10/the-journey-begins/</link>
		<pubDate>Wed, 10 Apr 2019 05:19:09 +0000</pubDate>
		<dc:creator>rohanjd</dc:creator>
		<guid isPermaLink="false">https://phpknowledgeblog47.wordpress.com/?p=3</guid>
		<description></description>
		<content:encoded><![CDATA[Thanks for joining me! <blockquote>Good company in a journey makes the way seem shorter. â€” Izaak Walton</blockquote><img class="wp-image-7 size-full" src="https://headstartdata.files.wordpress.com/2018/02/post.png" alt="post" width="1000" height="563" />]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3</wp:post_id>
		<wp:post_date>2019-04-10 05:19:09</wp:post_date>
		<wp:post_date_gmt>2019-04-10 05:19:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>the-journey-begins</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_headstart_post</wp:meta_key>
			<wp:meta_value><![CDATA[_hs_first_post]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>sharing_disabled</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;i:0;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>switch_like_status</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;i:0;}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wpas_skip_all_services</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Home</title>
		<link>https://phpknowledgeblog47.wordpress.com/2019/04/10/home/</link>
		<pubDate>Wed, 10 Apr 2019 05:24:10 +0000</pubDate>
		<dc:creator>rohanjd</dc:creator>
		<guid isPermaLink="false">https://phpknowledgeblog47.wordpress.com/2019/04/10/home/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date>2019-04-10 05:24:10</wp:post_date>
		<wp:post_date_gmt>2019-04-10 05:24:10</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>home</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="primary"><![CDATA[Primary]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_pending</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[/]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Switch from Xampp to Docker.</title>
		<link>https://phpknowledgeblog47.wordpress.com/2019/08/08/switch-from-xampp-to-docker/</link>
		<pubDate>Thu, 08 Aug 2019 11:49:07 +0000</pubDate>
		<dc:creator>rohanjd</dc:creator>
		<guid isPermaLink="false">https://phpknowledgeblog47.wordpress.com/?p=9</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>Why switch from Xampp to Docker, for PHP developers, my experience.</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For the uninitiated, LAMP stands for: </p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Linux</li><li>Apache (OR Nginx , in that case it become LEMP stack).</li><li>Mysql,  MariaDB</li><li>PHP, Perl or Python</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Many LAMP developer prefer using XAMPP or MAMPP to setup a quick development environment. Some developers even prefer installing the stack directly on their linux machines, These are great and convenient approaches for most cases.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>However, there are few issue that I have faced after using these:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Switching PHP version between 5.5 , 5.6 or 7.1, 7.2 or 7.3 can get messy at times, when using XAMPP.</li><li>Similarly MySql upgrade can have issues, when updating version.</li><li>If not done correctly you can end up with multiple  XAMPP setups.</li><li>Adding extensions like ssh2/gnupg..etc in different version of XAMPP/PHP can become a tedious task.</li><li>Directly installing LAMP on your Linux machine can open another can of worms, if not done correctly. Since there is not isolation between your Linux system and LAMP setup.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>As a beginner , I have myself had to format my Linux system many a times, to solve partitions issues or broken Dependencies.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"large"} -->
<p class="has-large-font-size">Docker to the rescue...</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">What is Docker ?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Simply said, <a href="https://en.wikipedia.org/wiki/Docker_(software)">Docker</a> is a Containerization  Software, that runs on the Docker Engine, This make it easier to create, deploy, and run applications by using containers.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Well then, What are Containers?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A <a href="https://www.docker.com/resources/what-container">container</a> is a standard unit of software that packages up code and all its dependencies so the application runs quickly and reliably from one computing environment to another.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"normal"} -->
<p class="has-normal-font-size"><span style="text-decoration:underline;">Well Docker is much more that this, and one of the leading technologies in the market place now, well there are lots of great articles out there on more advance topics. But with context to this Post,</span> am just explaining few basic advantages of Docker.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">How can Docker help LAMP developers?</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>You can consider Docker as an isolated Container, where all process run in a sort of Sandbox.</li><li>This isolation is the a great advantage for developers. You can setup something and if you make a mistake,  no big deal you can destroy the Container and restart in few seconds.</li><li>Docker is Cross-platform, it can run on Linux, Mac or Windows.</li><li>You can replicate your exact production environment locally, if done correctly.</li><li>You can find official <a href="https://hub.docker.com/_/php">PHP images</a> for Docker right from php 5.6 all the way up to latest PHP releases.</li><li>Switching PHP version OR adding extensions is streamlined &amp; can be done via the Dockerfile.</li><li>There are <a href="https://hub.docker.com/search?q=&amp;type=image">Docker image </a>available  for almost everything from PHP to Mongodb, Couchdb, Redis, Solr ..and many more..</li><li>Integration &amp; installation of these services is effortless.</li><li>Docker image are immutable, meaning: the images are readonly and can be reused multiple times, in different setups.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph {"fontSize":"medium"} -->
<p class="has-medium-font-size">Conclusion :</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>LAMP development is come a long way since Xampp, and Docker is a tool that will take it in to the future. Docker containerization is a vast &amp; interesting topic, using it to setup a local environment will just be the tip of the iceberg.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date>2019-08-08 11:49:07</wp:post_date>
		<wp:post_date_gmt>2019-08-08 11:49:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>switch-from-xampp-to-docker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="containers"><![CDATA[Containers]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[PHP]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="xampp"><![CDATA[xampp]]></category>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1565264951]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[33809832289]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>LAMP stack with Docker</title>
		<link>https://phpknowledgeblog47.wordpress.com/2019/08/08/lamp-stack-with-docker/</link>
		<pubDate>Thu, 08 Aug 2019 12:24:02 +0000</pubDate>
		<dc:creator>rohanjd</dc:creator>
		<guid isPermaLink="false">https://phpknowledgeblog47.wordpress.com/?p=17</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:heading -->
<h2>This post is a simple Tutorial on how to setup a LAMP stack using docker-compose.</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you have already installed docker &amp; docker-compose, you can ignore the below step.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>$ sudo apt-get update</code>&nbsp;<code>$ sudo apt-get install docker-ce</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>else follow instructions&nbsp;<a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/#install-docker-ce-1">here</a></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This LEMP stack uses: NGINX latest alpine MYSQL 5.6.40 PHP 7.1-fpm-alpine mailhog (local mailing service) adminer (database admin) traefik (load balancer) portainer (to debug docker)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We are using alpine image for this tutorial as they are small &amp; compact in size. Alternatively you can also use PHP 5.6-fpm-alpine image.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Assuming that you have cloned this repository. Now navigate to the repository directory, and run below listed commands.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><code>$ sudo docker build .</code></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>On first executing the build command it will down load all the specified docker images. Then it will execute commands specified in the Dockerfile, for each image.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p><code>$ sudo docker-compose up -d</code></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>The docker-compose up command will start all the containers mentioned in the docker compose file in the detached mode, hence the -d. If all goes well, all the containers should be running now. You can verify this usin the below command.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p><code>$ sudo docker-compose ps</code></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>This will display status of all the container either in up OR exit state.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p><code>$ sudo docker exec -it lampdock_nginx /bin/sh</code></p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p>Above command can be used to attach to a running container (like a local bash). Alternatively you can change container name, to connect to other running containers.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>//ToDo : add folder structure.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {"level":3} -->
<h3><a href="https://github.com/naxrohan/docker-lemp-stack#further-reading--references-links"></a>Further Reading &amp; References links:</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li><a href="https://docs.docker.com/samples/library/php/#how-to-install-more-php-extensions">how-to-install-more-php-extensions</a>.</li><li><a href="https://blog.docker.com/2015/04/tips-for-deploying-nginx-official-image-with-docker/">tips-for-deploying-nginx-official-image-with-docker</a>.</li><li><a href="http://geekyplatypus.com/dockerise-your-php-application-with-nginx-and-php7-fpm/">dockerise-your-php-application-with-nginx-and-php7-fpm</a>.</li><li><a href="https://stackoverflow.com/questions/49427530/fatal-error-uncaught-error-call-to-undefined-function-mysqli-connect">common mysql error</a>.</li><li><a href="https://serverfault.com/questions/840046/why-is-there-no-php-ini-file-when-i-install-php-in-a-docker-container">setup custom php ini file</a>.</li><li><a href="https://medium.com/@shakyShane/laravel-docker-part-1-setup-for-development-e3daaefaf3c">laravel-docker-part-1-setup-for-development</a>.</li></ul>
<!-- /wp:list -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2019-08-08 12:24:02</wp:post_date>
		<wp:post_date_gmt>2019-08-08 12:24:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>lamp-stack-with-docker</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker-compose"><![CDATA[docker-compose]]></category>
		<category domain="post_tag" nicename="lamp"><![CDATA[LAMP]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_publicize_job_id</wp:meta_key>
			<wp:meta_value><![CDATA[33811023804]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>timeline_notification</wp:meta_key>
			<wp:meta_value><![CDATA[1565267047]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
